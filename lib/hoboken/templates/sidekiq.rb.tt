# frozen_string_literal: true

require 'sidekiq'

Sidekiq.configure_client do |config|
  config.redis = { size: 1 }
end

Sidekiq.configure_server do |config|
  # TODO: Setup an error handling service (i.e. Airbrake, Sentry, etc.)
  # https://github.com/mperham/sidekiq/wiki/Error-Handling#best-practices
  #
  # require 'airbrake'
  # config.error_handlers << ->(ex, ctx_hash) { Airbrake.notify(ex, ctx_hash) }

  config.death_handlers << lambda do |job, ex|
    puts "#{job['class']} job #{job['jid']} just died (#{ex.message})"
  end
end

Dir.glob(File.join('workers', '**', '*.rb')).each do |worker|
  require_relative "../#{worker}"
end
